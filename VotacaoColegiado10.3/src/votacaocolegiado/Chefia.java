package votacaocolegiado;

import java.util.*;

import votacaocolegiado.Usuario.EnumAcoes;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : Chefia.java
//  @ Date : 08/06/2012
//  @ Author : 
//
//

public class Chefia extends MembroColegiado {

	/**
	 * Construtor da classe chefia
	 * 
	 * @param nome
	 * @param matricula
	 */
	public Chefia(String nome, int matricula, String senha) {
		super(nome, matricula, senha);
		
		acoes.add(EnumAcoes.CriarVotacao);
		acoes.add(EnumAcoes.AbreVotacao);
		acoes.add(EnumAcoes.FechaVotacao);
	}

	// public Votacao Autoriza;
	public void criarVotacao(ArrayList<Votacao> listaVotacoes) {
		int opcao = 0;
		String titulo = null;
		Scanner scannerInt = new Scanner(System.in);
		Scanner scannerString = new Scanner(System.in);

		System.out.println("Opção 1: Estagio Probatorio");
		System.out.println("Opção 2: Progresso Funcional");
		System.out.println("Opção 3: Afastamento");
		System.out.println("Qual votação deseja criar?");

		try {
			opcao = scannerInt.nextInt();

			System.out.print("Insira o titulo da votação: ");
			titulo = scannerString.nextLine();

			switch (opcao) {
			case 1:// Estagio Probatorio
				String relatorioEstagio = null;
				String parecer = null;
				EstagioProbatorio novoEstagio = new EstagioProbatorio(titulo);
				System.out.println("Insira o relatório:");
				relatorioEstagio = scannerString.nextLine();
				System.out.println("Insira o parecer:");
				parecer = scannerString.nextLine();
				novoEstagio.insereDocumentos(relatorioEstagio, parecer);
				listaVotacoes.add(novoEstagio);
				break;
			case 2:// Progressão Funcional
				String relatorioProgressao = null;
				String parecerComissao = null;
				ProgressaoFuncional novaProgressao = new ProgressaoFuncional(
						titulo);
				System.out.println("Insira o relatório:");
				relatorioProgressao = scannerString.nextLine();
				System.out.println("Insira o parecer da comissão:");
				parecerComissao = scannerString.nextLine();
				novaProgressao.insereDocumentos(relatorioProgressao,
						parecerComissao);
				listaVotacoes.add(novaProgressao);
				break;
			case 3:// Afastamento
				String justificativa = null;
				String encargosDidaticos = null;
				String encargosAdmin = null;
				Afastamento novoAfastamento = new Afastamento(titulo);
				System.out.println("Insira a justificativa:");
				justificativa = scannerString.nextLine();
				System.out.println("Insira os engargos didáticos");
				encargosDidaticos = scannerString.nextLine();
				System.out.println("Insira os encargos adimnistrativos");
				encargosAdmin = scannerString.nextLine();
				novoAfastamento.insereDocumentos(justificativa,
						encargosDidaticos, encargosAdmin);
				listaVotacoes.add(novoAfastamento);
				break;
			default:
				System.out.println("Opção inválida");

			}
		} catch (InputMismatchException e) {
			System.out.println("Entrada inválida.");
		}
	}

	public void abreVotacao(ArrayList<Votacao> listaVotacoes)
			throws VotacaoNaoEncontradaException {
		Scanner scanner = new Scanner(System.in);

		System.out.print("Insira o nome da votação que deseja abrir: ");
		String titulo = scanner.nextLine();

		int i = 0;
		for (i = 0; i < listaVotacoes.size(); i++) {
			if (listaVotacoes.get(i).getTitulo().equals(titulo)) {
				if (!listaVotacoes.get(i).votacaoAberta()) {
					listaVotacoes.get(i).setEstaAberta();
					System.out.println("A votação foi aberta com sucesso.");
				}
				else {
					System.out.println("A votação já está aberta.");
				}
				return;
			}
		}

		if (i >= listaVotacoes.size())
			throw new VotacaoNaoEncontradaException();
	}

	public void fechaVotGeraAta(ArrayList<Votacao> listaVotacoes,
			ArrayList<Ata> listaAtas) throws VotacaoNaoEncontradaException {
		Scanner scanner = new Scanner(System.in);

		System.out.print("Insira o nome da votação: ");
		String titulo = scanner.nextLine();

		int i;
		for (i = 0; i < listaVotacoes.size(); i++) {
			if (listaVotacoes.get(i).getTitulo().equals(titulo)) {
				listaAtas.add(listaVotacoes.get(i).gerarAta());// gera a ata
				listaVotacoes.remove(i);// remove a votação
				return;
			}
		}

		if (i >= listaVotacoes.size())
			throw new VotacaoNaoEncontradaException();
	}
}
